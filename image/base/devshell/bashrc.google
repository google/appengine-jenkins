#
# Copyright 2015 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Avoid sourcing bashrc.google more than once for a session as some of
# the commands below are not reentrant.
if [[ -n "${GOOGLE_BASHRC_SOURCED}" ]]; then
  return
fi
GOOGLE_BASHRC_SOURCED=1

for FILE in /google/devshell/bashrc.google.d/*; do
  if [ -f "$FILE" ]; then
    source "$FILE"
  fi
done

CLOUD_SDK="/google/google-cloud-sdk"

# The next line updates PATH for the Google Cloud SDK.
source "$CLOUD_SDK/path.bash.inc"

# The next line enables bash completion for gcloud.
source "$CLOUD_SDK/completion.bash.inc"

# Assigns a unique per current session configuration location for Cloud SDK
# tools to isolate independent Developer Shell session from each other.
export CLOUDSDK_CONFIG=$(mktemp -d)
trap "rm -rf ${CLOUDSDK_CONFIG}" EXIT

# Make sure to still create the default configuration settings directory since
# "gcloud auth login" wants to store the credentials there but forgets to
# create it itself when CLOUDSDK_CONFIG is set.  Since Devshell is
# authenticated by default, "gcloud auth login" should not be generally needed
# but in case it is used we do want to have it working.
#
mkdir -p $HOME/.config/gcloud

# Sets the default Cloud SDK session project from Developer Shell environment.
gcloud config set project "${DEVSHELL_PROJECT_ID:-}"

# Returns the current Cloud SDK project extracted from the configuration area.
# Could parse it from "gcloud config list" output, but invoking gcloud on
# each prompt is impractically slow currently.  Use custom Python for now.
get_current_gcloud_project_id () {
  python <<EOF
import os
import ConfigParser as cp
try:
  config_path = os.environ['CLOUDSDK_CONFIG'] + '/properties'
  config = cp.ConfigParser()
  config.read(config_path)
  print(config.get('core', 'project'))
except:
  print("")
EOF
}

# Updates DEVSHELL_PROJECT_ID environment variable to the current project ID
# stored in the session configuration area.
update_devshell_project_id () {
  export DEVSHELL_PROJECT_ID=$(get_current_gcloud_project_id)
}

export PS1='\[\e]0;${DEVSHELL_PROJECT_ID:-Developer Shell}\a\]'
export PS1+='\u@${DEVSHELL_PROJECT_ID:-devshell}:\w$ '
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ; }"
export PROMPT_COMMAND+="update_devshell_project_id"

